// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PopularMovies Screen Tests should render and match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "backgroundColor": "#262626",
        "flex": 1,
      }
    }
  >
    <View
      dataSet={Object {}}
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flex": 0.1,
          "justifyContent": "center",
          "marginBottom": 6,
          "marginLeft": 6,
          "marginRight": 6,
          "marginTop": 6,
        }
      }
    >
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#262626",
            "borderColor": "#262626",
            "borderRadius": 4,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "row",
            "marginLeft": 20,
            "marginRight": 20,
            "overflow": "hidden",
            "width": "75%",
          }
        }
      >
        <TextInput
          accessible={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Search"
          placeholderTextColor="#525252"
          secureTextEntry={false}
          selectionColor="#fafaf9"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#fafafa",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          value=""
        />
      </View>
    </View>
    <View
      dataSet={Object {}}
      style={
        Object {
          "flex": 0.9,
        }
      }
    >
      <RCTScrollView
        ListFooterComponent={[Function]}
        contentContainerStyle={
          Object {
            "alignSelf": "center",
          }
        }
        data={Array []}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={true}
          />
        }
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        testID="POPULAR_MOVIES_FLAT_LIST"
        viewabilityConfigCallbackPairs={Array []}
      >
        <RCTRefreshControl />
        <View>
          <View
            onLayout={[Function]}
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "none",
        },
      ]
    }
  >
    <View
      collapsable={false}
      entryDuration={200}
      exitDuration={150}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      entryDuration={200}
      exitDuration={100}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        closeOnOverlayClick={true}
        dataSet={Object {}}
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          accessibilityViewIsModal={true}
          aria-modal="true"
          dataSet={Object {}}
          onAccessibilityEscape={[Function]}
          style={
            Object {
              "backgroundColor": "#262626",
              "borderRadius": 8,
              "elevation": 2,
              "flex": 1,
              "maxHeight": 1184,
              "maxWidth": 600,
              "overflow": "hidden",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 1.41,
              "width": "75%",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "height": 50,
                  "width": "100%",
                }
              }
            >
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "en-GB",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": "en-GB",
                    },
                    Object {
                      "label": "fr-FR",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": "fr-FR",
                    },
                    Object {
                      "label": "pl",
                      "testID": undefined,
                      "textColor": undefined,
                      "value": "pl",
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            colorScheme="success"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#16a34a",
                "borderRadius": 4,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginLeft": 8,
                "marginRight": 8,
                "marginTop": 8,
                "paddingBottom": 10,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 10,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
              test={true}
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#fafafa",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  common:Save
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
